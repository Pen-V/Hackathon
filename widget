#import widget and date library
from tkinter import *
from datetime import timedelta, date

#widget object
window = Tk()

#list of starred foods
favFoods = []

#create array of 7 days
date_string_list = []

for i in range(7):
    day = date.today() + timedelta(days=i)
    string = str(day)
    print(string)
    date_string_list.append(string)

#meal and date selection frame 
topFrame = Frame(window, width=100, height=3, bg='white')
topFrame.grid(row = 0, column = 0)

#dining common title frame
bottomFrame = Frame(window, width=100, height=3, bg='grey')
bottomFrame.grid(row = 1, column = 0)

#list of foods frame
listFrame = Frame(window, width=100, height = 3, bg = 'grey')
listFrame.grid(row = 2, column = 0)

#object for toggle button for meal selection
class meals(Button):
    registry = []
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.config(command = self.click_function)
        self.registry.append(self)
    def click_function(self):
        if self.config('relief')[-1] == 'sunken':
            self.config(relief="raised")
            self.config(bg = "white")
        else:
            self.config(relief="sunken")
            self.config(bg = "#717171")
            for meal in self.registry:
                if meal != self:
                    print(meal)
                    meal.config(relief="raised")
                    meal.config(bg = "white")

#object for toggle button for date selection
class dates(Button):
    registry = []
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.config(command = self.click_function)
        self.registry.append(self)
    def click_function(self):
        if self.config('relief')[-1] == 'sunken':
            self.config(relief="raised")
            self.config(bg = "white")
        else:
            self.config(relief="sunken")
            self.config(bg = "#717171")
            for date in self.registry:
                if date != self:
                    print(date)
                    date.config(relief="raised")
                    date.config(bg = "white")

#object for toggle button for star button
class star(Button):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.config(command = self.click_function)
    def click_function(self):
        x, y = self.grid_info()["column"], self.grid_info()["row"]
        food = listFrame.grid_slaves(y, x-1)[0]['text']
        if self.config('relief')[-1] == 'sunken':
            self.config(relief="raised")
            self.config(bg = "white")
            if food in favFoods:
                favFoods.remove(food)
        else:
            self.config(relief="sunken")
            self.config(bg = "gold")
            if food not in favFoods:
                favFoods.append(food)
        print(x, y)
        print(favFoods)

#meal selection buttons  
buttonBrunch = meals(topFrame,
                        text="Brunch",
                        width=12,
                        bg = "white",
                        relief="raised",)
buttonBrunch.grid(row = 2, column = 0)

buttonBreakfast = meals(topFrame,
                        text="Breakfast",
                        width=12,
                        bg = "white",
                        relief="raised",)
buttonBreakfast.grid(row = 2, column = 1)

buttonLunch = meals(topFrame,
                    text="Lunch",
                    width=12,
                    bg = "white",
                    relief="raised",)
buttonLunch.grid(row = 2, column = 2)

buttonDinner = meals(topFrame,
                    text="Dinner",
                    width=12,
                    bg = "white",
                    relief="raised",)
buttonDinner.grid(row = 2, column = 3)

#date selection buttons
buttonBrunch = dates(topFrame,
                        text="Today",
                        width=12,
                        bg = "white",
                        relief="raised",)
buttonBrunch.grid(row = 1, column = 0)

buttonBrunch = dates(topFrame,
                        text="Tomorrow",
                        width=12,
                        bg = "white",
                        relief="raised",)
buttonBrunch.grid(row = 1, column = 1)
for i in range(2, 7):
    buttonBrunch = dates(topFrame,
                            text=date_string_list[i],
                            width=12,
                            bg = "white",
                            relief="raised",)
    buttonBrunch.grid(row = 1, column = i)

#apply button
buttonApply = Button(topFrame,
                        text = 'Apply',
                        width=12,
                        bg='white',
                        relief='raised')
buttonApply.grid(row = 2, column = 6)

#dining common labels
labelCarrillo = Label(bottomFrame,
                 text="Carrillo",
                 width=28,
                 anchor = W).grid(row = 0,
                                column = 0)

labelDLG = Label(bottomFrame,
                 text="De La Guerra",
                 width=28,
                 anchor = W).grid(row = 0,
                                column = 1)

labelOrtega = Label(bottomFrame,
                 text="Ortega",
                 width=28,
                 anchor = W).grid(row = 0,
                                column = 2)

labelPortola = Label(bottomFrame,
                 text="Portola",
                 width=28,
                 anchor = W).grid(row = 0,
                                column = 3)

#food list labels and star buttons
carrilloMenu = ['a', 'b', 'c']
for i in range(len(carrilloMenu)):
    carrilloFood = Label(listFrame,
                         text = carrilloMenu[i],
                         width = 25,
                         pady = 5).grid(row = i+1,
                                          column = 0)
    carrilloButton = star(listFrame,
                            text = 'O',
                            width = 2,
                            height = 1).grid(row=i+1,
                                            column=1)

dlgMenu = ['a', 'b', 'c']
for i in range(len(dlgMenu)):
    dlgFood = Label(listFrame,
                         text = dlgMenu[i],
                         width = 25,
                         pady = 5).grid(row = i+1,
                                          column = 2)
    dlgButton = star(listFrame,
                            text = 'O',
                            width = 2,
                            height = 1).grid(row=i+1,
                                            column=3)
    
ortegaMenu = ['A', 'B', 'C']
for i in range(len(ortegaMenu)):
    ortegaFood = Label(listFrame,
                        text = ortegaMenu[i],
                        width = 25,
                        pady = 5).grid(row = i+1,
                                        column = 4)
    ortegaButton = star(listFrame,
                            text = 'O',
                            width = 2,
                            height = 1).grid(row=i+1,
                                            column=5)

portolaMenu = ['a', 'b', 'c']
for i in range(len(portolaMenu)):
    portolaFood = Label(listFrame,
                        text = portolaMenu[i],
                        width = 25,
                        pady = 5).grid(row = i+1,
                                        column = 6)
    portolaButton = star(listFrame,
                            text = 'O',
                            width = 2,
                            height = 1,
                            relief = 'raised').grid(row=i+1,
                                            column=7)

#loop
mainloop()

